<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	
	<!-- 配置被代理的对象 -->
	<bean id="testService" class="com.rhwayfun.ssh.spring.demo.aop.TestServiceImpl">
		<property name="name" value="rhwayfun"/>
	</bean>
	<!-- 配置前置通知 -->
	<bean id="testMethodBefore" class="com.rhwayfun.ssh.spring.demo.aop.TestMethodBefore"/>
	<!-- 配置环绕通知 -->
	<bean id="testMethodInterceptor" class="com.rhwayfun.ssh.spring.demo.aop.TestMethodInterceptor"/>
	<!-- 配置后置通知 -->
	<bean id="testMethodAfter" class="com.rhwayfun.ssh.spring.demo.aop.TestMethodAfter"/>
	<!-- 配置异常通知 -->
	<bean id="testThrowsAdvice" class="com.rhwayfun.ssh.spring.demo.aop.TestThrowsAdvice"/>
	<!-- 定义前置通知的切入点 -->
	<bean id="testMethodBeforeFilter" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="testMethodBefore"/>
		<property name="mappedNames">
			<list>
				<value>sayHello</value>
			</list>
		</property>
	</bean>
	<!-- 配置代理对象 -->
	<bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 配置代理接口集合：就是要代理的接口对象 -->
		<property name="proxyInterfaces">
			<list>
				<value>com.rhwayfun.ssh.spring.demo.aop.TestService</value>
				<value>com.rhwayfun.ssh.spring.demo.aop.TestService2</value>
			</list>
		</property>
		<!-- 把前置通知交给代理对象管理：这里的通知可以理解为拦截器-->
		<property name="interceptorNames">
			<list>
				<!-- 织入前置通知 -->
				<value>testMethodBeforeFilter</value>
				<!-- 织入后置通知 -->
				<value>testMethodAfter</value>
				<!-- 织入环绕通知 -->
				<value>testMethodInterceptor</value>
				<!-- 织入异常通知 -->
				<value>testThrowsAdvice</value>
			</list>
		</property>
		<!-- 指定要代理的对象 -->
		<property name="target" ref="testService"/>
	</bean>
</beans>
